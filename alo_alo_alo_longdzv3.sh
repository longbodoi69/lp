sh -c "$(echo -e '#!/system/bin/sh
dev=longdz
refresh_rate=$(dumpsys SurfaceFlinger | grep "refresh-rate" | awk '{printf("%d\n", $3)}')
brand=$(getprop ro.product.system.brand)
hardware=$(getprop ro.hardware)
brand=$(getprop ro.product.brand)
kb_ram=$(cat /proc/meminfo | grep MemTotal | awk '{print $2}')
gb_ram=$(echo "scale=2; $kb_ram / 1048576" | bc)
sleep 0.5
echo " Đã Setup Cấu Hình Theo: ${refresh_rate}Hz"
echo "
___________                     __            
\__    ___/_  _  __ ____ _____  |  | __ ______
  |    |  \ \/ \/ // __ \__  \ |  |/ / /  ___/
  |    |   \     /\  ___/ / __ \|    <  \___ \ 
  |____|    \/\_/  \___  >____  /__|_ \/____  >
                       \/     \/     \/     \/ "
sleep 1
echo ""
echo "🛠️Project Name: V3"
echo " 🖥️Developer: $dev"
echo " 📄Status: No Root"
sleep 1
echo ""
echo " 🔥Device Information"
echo " ➤ Brand  : $dev "
echo " ➤ Status : $(if [ $(which su) ]; then echo 'Root'; else echo 'No Root'; fi) "
echo " ➤ Gpu    : $(getprop ro.hardware.egl) "
echo " ➤ Cpu    : $(getprop ro.hardware) "
echo " ➤ Hz     : $refresh_rate "
echo " Wait For Install🌪️‍ "

if [ "$refresh_rate" -eq 60 ]; then
setprop debug.sf.early.app.duration 20000000
setprop debug.sf.early.sf.duration 16666666
setprop debug.sf.earlyGl.app.duration 20000000
setprop debug.sf.earlyGl.sf.duration 16666666
elif [ "$refresh_rate" -eq 90 ]; then
setprop debug.sf.early.app.duration 12500000
setprop debug.sf.early.sf.duration 11111111
setprop debug.sf.earlyGl.app.duration 12500000
setprop debug.sf.earlyGl.sf.duration 11111111 
elif [ "$refresh_rate" -eq 120 ]; then
setprop debug.sf.early.app.duration 10500000
setprop debug.sf.early.sf.duration 8333333
setprop debug.sf.earlyGl.app.duration 10500000
setprop debug.sf.earlyGl.sf.duration 8333333
else
    echo "Tần số quét không xác định hoặc khác 60/90/120"
fi
settings put system peak_refresh_rate "$refresh_rate"
settings put system max_refresh_rate "$refresh_rate"
settings put system min_refresh_rate "$refresh_rate"
settings put system miui_refresh_rate "$refresh_rate"
settings put system user_refresh_rate "$refresh_rate"
settings put system fps_limit "$refresh_rate"
settings put system thermal_limit_refresh_rate "$refresh_rate"
settings put system game_default_frame_rate_override "$refresh_rate"
settings put system virtual_display_default_refresh_rate "$refresh_rate"
setprop debug.javafx.animation.framerate "$refresh_rate"
settings put system force_max_refresh_rate "$refresh_rate"
settings put system override_min_frame_rate "$refresh_rate"
settings put system default_refresh_rate "$refresh_rate"
settings put system gaming_mode_fps "$refresh_rate"
settings put system refresh_rate "$refresh_rate"
settings put system default_refresh_rate "$refresh_rate"
settings put system refresh_default_rate "$refresh_rate"
settings put system NV_FPSLIMIT "$refresh_rate"
settings put secure peak_refresh_rate "$refresh_rate"
settings put secure max_refresh_rate "$refresh_rate"
settings put secure min_refresh_rate "$refresh_rate"
settings put secure miui_refresh_rate "$refresh_rate"
settings put secure user_refresh_rate "$refresh_rate"
settings put secure fps_limit "$refresh_rate"
settings put secure thermal_limit_refresh_rate "$refresh_rate"
settings put secure game_default_frame_rate_override "$refresh_rate"
settings put secure virtual_display_default_refresh_rate "$refresh_rate"
settings put secure force_max_refresh_rate "$refresh_rate"
settings put secure override_min_frame_rate "$refresh_rate"
settings put secure default_fps "$refresh_rate"
settings put secure gaming_mode_fps "$refresh_rate"
settings put secure refresh_rate "$refresh_rate"
settings put secure default_refresh_rate "$refresh_rate"
settings put secure refresh_default_rate "$refresh_rate"
settings put secure NV_FPSLIMIT "$refresh_rate"
setprop debug.fps.target "$refresh_rate"
setprop debug.egl.frame_rate "$refresh_rate"

apply_properties() {
    local name="debug.composition.type"
    local value="gpu"
    setprop "$name" "$value"
}> /dev/null 2>&1
apply_tweaks() {
    local name="debug.sf.hw"
    local value="1"
    setprop "$name" "$value"
}> /dev/null 2>&1
apply_fps() {
    local name="debug.hwui.fps_divisor"
    local value="1"
    setprop "$name" "$value"
}> /dev/null 2>&1
apply_vsync1() {
    local name="debug.egl.swapinterval"
    local value="1"
    setprop "$name" "$value"
}> /dev/null 2>&1
apply_vsync2() {
    local name="debug.sf.swapinterval"
    local value="1"
    setprop "$name" "$value"
}> /dev/null 2>&1
apply_vsync3() {
    local name="debug.gr.swapinterval"
    local value="1"
    setprop "$name" "$value"
}> /dev/null 2>&1

log() {
    disable_log=(
        "log.tag.AF::MmapTrack S"
        "log.tag.AF::OutputTrack S"
        "log.tag.AF::PatchRecord S"
        "log.tag.AF::PatchTrack S"
        "log.tag.AF::RecordHandle S"
        "log.tag.AF::RecordTrack S"
        "log.tag.AF::Track S"
        "log.tag.AF::TrackBase S"
        "log.tag.AF::TrackHandle S"
        "log.tag.APM-KpiMonitor S"
        "log.tag.APM-ServiceJ S"
        "log.tag.APM-SessionJ S"
        "log.tag.APM-SessionN S"
        "log.tag.APM-Subscriber S"
        "log.tag.APM::AudioCollections S"
        "log.tag.APM::AudioInputDescriptor S"
        "log.tag.APM::AudioOutputDescriptor S"
        "log.tag.APM::AudioPatch S"
        "log.tag.APM::AudioPolicyEngine S"
        "log.tag.APM::AudioPolicyEngine::Base S"
        "log.tag.APM::AudioPolicyEngine::Config S"
        "log.tag.APM::AudioPolicyEngine::ProductStrategy S"
        "log.tag.APM::AudioPolicyEngine::VolumeGroup S"
        "log.tag.APM::Devices S"
        "log.tag.APM::IOProfile S"
        "log.tag.APM::Serializer S"
        "log.tag.APM::VolumeCurve S"
        "log.tag.APM_AudioPolicyManager S"
        "log.tag.APM_ClientDescriptor S"
        "log.tag.AT S"
        "log.tag.AccountManager S"
        "log.tag.ActivityManager S"
        "log.tag.ActivityManagerService S"
        "log.tag.ActivityTaskManager S"
        "log.tag.ActivityTaskManagerService S"
        "log.tag.AdnRecord S"
        "log.tag.AdnRecordCache S"
        "log.tag.AdnRecordLoader S"
        "log.tag.AirplaneHandler S"
        "log.tag.AlarmManager S"
        "log.tag.AlarmManagerService S"
        "log.tag.AndroidRuntime S"
        "log.tag.AppOps S"
        "log.tag.AudioAttributes S"
        "log.tag.AudioEffect S"
        "log.tag.AudioFlinger S"
        "log.tag.AudioFlinger::DeviceEffectProxy S"
        "log.tag.AudioFlinger::DeviceEffectProxy::ProxyCallback S"
        "log.tag.AudioFlinger::EffectBase S"
        "log.tag.AudioFlinger::EffectChain S"
        "log.tag.AudioFlinger::EffectHandle S"
        "log.tag.AudioFlinger::EffectModule S"
        "log.tag.AudioFlinger_Threads S"
        "log.tag.AudioHwDevice S"
        "log.tag.AudioManager S"
        "log.tag.AudioPolicy S"
        "log.tag.AudioPolicyEffects S"
        "log.tag.AudioPolicyIntefaceImpl S"
        "log.tag.AudioPolicyManager S"
        "log.tag.AudioPolicyService S"
        "log.tag.AudioProductStrategy S"
        "log.tag.AudioRecord S"
        "log.tag.AudioService S"
        "log.tag.AudioSystem S"
        "log.tag.AudioTrack S"
        "log.tag.AudioTrackShared S"
        "log.tag.AudioVolumeGroup S"
        "log.tag.BackupManager S"
        "log.tag.BatteryManager S"
        "log.tag.BatteryStatsService S"
        "log.tag.BluetoothAdapter S"
        "log.tag.BluetoothDevice S"
        "log.tag.BluetoothGattService S"
        "log.tag.BluetoothHidService S"
        "log.tag.BluetoothManager S"
        "log.tag.BluetoothMapService S"
        "log.tag.BluetoothPanService S"
        "log.tag.BluetoothPbapService S"
        "log.tag.BluetoothSapService S"
        "log.tag.BluetoothService S"
        "log.tag.BluetoothSocket S"
        "log.tag.BufferQueueDump S"
        "log.tag.BufferQueueProducer S"
        "log.tag.C2K_AT S"
        "log.tag.C2K_ATConfig S"
        "log.tag.C2K_RILC S"
        "log.tag.CAM2PORT_ S"
        "log.tag.CapaSwitch S"
        "log.tag.CarrierExpressServiceImpl S"
        "log.tag.CarrierExpressServiceImplExt S"
        "log.tag.ClipboardManager S"
        "log.tag.ConnectivityManager S"
        "log.tag.ConnectivityService S"
        "log.tag.ConsumerIrService S"
        "log.tag.ContentManager S"
        "log.tag.CountryDetector S"
        "log.tag.DMC-ApmService S"
        "log.tag.DMC-Core S"
        "log.tag.DMC-DmcService S"
        "log.tag.DMC-EventsSubscriber S"
        "log.tag.DMC-ReqQManager S"
        "log.tag.DMC-SessionManager S"
        "log.tag.DMC-TranslatorLoader S"
        "log.tag.DMC-TranslatorUtils S"
        "log.tag.DSSelector S"
        "log.tag.DSSelectorOP01 S"
        "log.tag.DSSelectorOP02 S"
        "log.tag.DSSelectorOP09 S"
        "log.tag.DSSelectorOP18 S"
        "log.tag.DSSelectorOm S"
        "log.tag.DSSelectorUtil S"
        "log.tag.DataDispatcher S"
        "log.tag.DeviceIdleController S"
        "log.tag.DevicePolicyManager S"
        "log.tag.DevicePolicyManagerService S"
        "log.tag.DisplayManager S"
        "log.tag.DisplayManagerService S"
        "log.tag.DockObserver S"
        "log.tag.DownloadManager S"
        "log.tag.ExternalSimMgr S"
        "log.tag.FastCapture S"
        "log.tag.FastMixer S"
        "log.tag.FastMixerState S"
        "log.tag.FastThread S"
        "log.tag.FragmentManager S"
        "log.tag.FuseDaemon S"
        "log.tag.GAv4 S"
        "log.tag.GraphicsStats S"
        "log.tag.GsmCallTkrHlpr S"
        "log.tag.GsmCdmaConn S"
        "log.tag.GsmCdmaPhone S"
        "log.tag.HardwarePropertiesManager S"
        "log.tag.HardwareService S"
        "log.tag.IAudioFlinger S"
        "log.tag.IMSRILRequest S"
        "log.tag.IMS_RILA S"
        "log.tag.IccCardProxy S"
        "log.tag.IccPhoneBookIM S"
        "log.tag.IccProvider S"
        "log.tag.ImsApp S"
        "log.tag.ImsBaseCommands S"
        "log.tag.ImsCall S"
        "log.tag.ImsCallProfile S"
        "log.tag.ImsCallSession S"
        "log.tag.ImsEcbm S"
        "log.tag.ImsEcbmProxy S"
        "log.tag.ImsManager S"
        "log.tag.ImsPhone S"
        "log.tag.ImsPhoneBase S"
        "log.tag.ImsPhoneCall S"
        "log.tag.ImsService S"
        "log.tag.ImsVTProvider S"
        "log.tag.InputDispatcher S"
        "log.tag.InputManager S"
        "log.tag.InputManagerService S"
        "log.tag.InputMethodManager S"
        "log.tag.InputMethodManagerService S"
        "log.tag.InterfaceManager S"
        "log.tag.IsimFileHandler S"
        "log.tag.IsimRecords S"
        "log.tag.JobScheduler S"
        "log.tag.KeyguardManager S"
        "log.tag.LCM-Subscriber S"
        "log.tag.LIBC2K_RIL S"
        "log.tag.LocationManager S"
        "log.tag.LocationManagerService S"
        "log.tag.LocationProvider S"
        "log.tag.MAPI-CommandProcessor S"
        "log.tag.MAPI-MdiRedirector S"
        "log.tag.MAPI-MdiRedirectorCtrl S"
        "log.tag.MAPI-NetworkSocketConnection S"
        "log.tag.MAPI-SocketConnection S"
        "log.tag.MAPI-SocketListener S"
        "log.tag.MAPI-TranslatorManager S"
        "log.tag.MDM-Subscriber S"
        "log.tag.MTKSST S"
        "log.tag.MTK_APPList S"
        "log.tag.MediaPlayer S"
        "log.tag.MediaPlayerService S"
        "log.tag.MediaRouter S"
        "log.tag.MediaSession S"
        "log.tag.MipcEventHandler S"
        "log.tag.MountService S"
        "log.tag.MtkAdnRecord S"
        "log.tag.MtkCsimFH S"
        "log.tag.MtkEmbmsAdaptor S"
        "log.tag.MtkFactory S"
        "log.tag.MtkGsmCdmaConn S"
        "log.tag.MtkIccCardProxy S"
        "log.tag.MtkIccPHBIM S"
        "log.tag.MtkIccProvider S"
        "log.tag.MtkIccSmsInterfaceManager S"
        "log.tag.MtkImsManager S"
        "log.tag.MtkImsService S"
        "log.tag.MtkIsimFH S"
        "log.tag.MtkPhoneNotifr S"
        "log.tag.MtkPhoneNumberUtils S"
        "log.tag.MtkPhoneSwitcher S"
        "log.tag.MtkRecordLoader S"
        "log.tag.MtkRuimFH S"
        "log.tag.MtkSIMFH S"
        "log.tag.MtkSIMRecords S"
        "log.tag.MtkSmsCbHeader S"
        "log.tag.MtkSmsManager S"
        "log.tag.MtkSmsMessage S"
        "log.tag.MtkSpnOverride S"
        "log.tag.MtkSubCtrl S"
        "log.tag.MtkTelephonyManagerEx S"
        "log.tag.MtkUiccCard S"
        "log.tag.MtkUiccCardApp S"
        "log.tag.MtkUiccCtrl S"
        "log.tag.MtkUsimFH S"
        "log.tag.MtkUsimPhoneBookManager S"
        "log.tag.MwiRIL S"
        "log.tag.NetAgentService S"
        "log.tag.NetAgent_IO S"
        "log.tag.NetLnkEventHdlr S"
        "log.tag.NetworkManagement S"
        "log.tag.NetworkManagementService S"
        "log.tag.NetworkPolicy S"
        "log.tag.NetworkPolicyManagerService S"
        "log.tag.NetworkStats S"
        "log.tag.NetworkTimeUpdateService S"
        "log.tag.NotificationManager S"
        "log.tag.NotificationManagerService S"
        "log.tag.OperatorUtils S"
        "log.tag.PKM-Lib S"
        "log.tag.PKM-MDM S"
        "log.tag.PKM-Monitor S"
        "log.tag.PKM-SA S"
        "log.tag.PKM-Service S"
        "log.tag.PQ_DS S"
        "log.tag.PackageInstaller S"
        "log.tag.PackageManager S"
        "log.tag.PersistentDataBlockManager S"
        "log.tag.Phone S"
        "log.tag.PhoneConfigurationSettings S"
        "log.tag.PhoneFactory S"
        "log.tag.PowerHalAddressUitls S"
        "log.tag.PowerHalMgrImpl S"
        "log.tag.PowerHalMgrServiceImpl S"
        "log.tag.PowerHalWifiMonitor S"
        "log.tag.PowerManager S"
        "log.tag.PowerManagerService S"
        "log.tag.PrintManager S"
        "log.tag.ProcessStats S"
        "log.tag.ProxyController S"
        "log.tag.RFX S"
        "log.tag.RIL S"
        "log.tag.RIL-Fusion S"
        "log.tag.RIL-Netlink S"
        "log.tag.RIL-Parcel S"
        "log.tag.RIL-SocListen S"
        "log.tag.RIL-Socket S"
        "log.tag.RILC S"
        "log.tag.RILC-OP S"
        "log.tag.RILD S"
        "log.tag.RILMD2-SS S"
        "log.tag.RIL_UIM_SOCKET S"
        "log.tag.RadioManager S"
        "log.tag.RfxAction S"
        "log.tag.RfxBaseHandler S"
        "log.tag.RfxChannelMgr S"
        "log.tag.RfxCloneMgr S"
        "log.tag.RfxContFactory S"
        "log.tag.RfxController S"
        "log.tag.RfxDebugInfo S"
        "log.tag.RfxDisThread S"
        "log.tag.RfxFragEnc S"
        "log.tag.RfxHandlerMgr S"
        "log.tag.RfxIdToMsgId S"
        "log.tag.RfxIdToStr S"
        "log.tag.RfxMainThread S"
        "log.tag.RfxMclDisThread S"
        "log.tag.RfxMclMessenger S"
        "log.tag.RfxMclStatusMgr S"
        "log.tag.RfxMessage S"
        "log.tag.RfxObject S"
        "log.tag.RfxOpUtils S"
        "log.tag.RfxRilAdapter S"
        "log.tag.RfxRilUtils S"
        "log.tag.RfxRoot S"
        "log.tag.RfxStatusMgr S"
        "log.tag.RfxTimer S"
        "log.tag.RilClient S"
        "log.tag.RilOemClient S"
        "log.tag.RilOpProxy S"
        "log.tag.RmmCapa S"
        "log.tag.RmmCommSimOpReq S"
        "log.tag.RmmDcEvent S"
        "log.tag.RmmDcPdnManager S"
        "log.tag.RmmDcUrcHandler S"
        "log.tag.RmmDcUtility S"
        "log.tag.RmmEccNumberReqHdlr S"
        "log.tag.RmmEccNumberUrcHandler S"
        "log.tag.RmmEmbmsReq S"
        "log.tag.RmmEmbmsUrc S"
        "log.tag.RmmImsCtlReqHdl S"
        "log.tag.RmmImsCtlUrcHdl S"
        "log.tag.RmmMwi S"
        "log.tag.RmmNwAsyncHdlr S"
        "log.tag.RmmNwHdlr S"
        "log.tag.RmmNwNrtReqHdlr S"
        "log.tag.RmmNwRTReqHdlr S"
        "log.tag.RmmNwRatSwHdlr S"
        "log.tag.RmmNwReqHdlr S"
        "log.tag.RmmNwUrcHdlr S"
        "log.tag.RmmOemHandler S"
        "log.tag.RmmOpRadioReq S"
        "log.tag.RmmPhbReq S"
        "log.tag.RmmPhbUrc S"
        "log.tag.RmmRadioReq S"
        "log.tag.RmmSimBaseHandler S"
        "log.tag.RmmSimCommReq S"
        "log.tag.RmmSimCommUrc S"
        "log.tag.RmmWp S"
        "log.tag.RtmCapa S"
        "log.tag.RtmCommSimCtrl S"
        "log.tag.RtmDC S"
        "log.tag.RtmEccNumberController S"
        "log.tag.RtmEmbmsAt S"
        "log.tag.RtmEmbmsUtil S"
        "log.tag.RtmIms S"
        "log.tag.RtmImsConference S"
        "log.tag.RtmImsConfigController S"
        "log.tag.RtmImsDialog S"
        "log.tag.RtmModeCont S"
        "log.tag.RtmMwi S"
        "log.tag.RtmNwCtrl S"
        "log.tag.RtmPhb S"
        "log.tag.RtmRadioConfig S"
        "log.tag.RtmRadioCont S"
        "log.tag.RtmWp S"
        "log.tag.SIMRecords S"
        "log.tag.SQLiteQueryBuilder S"
        "log.tag.SensorManager S"
        "log.tag.ServiceManager S"
        "log.tag.SimSwitchOP01 S"
        "log.tag.SimSwitchOP02 S"
        "log.tag.SimSwitchOP18 S"
        "log.tag.SlotQueueEntry S"
        "log.tag.SpnOverride S"
        "log.tag.StatusBarManagerService S"
        "log.tag.StorageManager S"
        "log.tag.SurfaceFlinger S"
        "log.tag.SystemServer S"
        "log.tag.Telecom S"
        "log.tag.TelephonyManager S"
        "log.tag.TelephonyRegistry S"
        "log.tag.ThermalManager S"
        "log.tag.ToneGenerator S"
        "log.tag.UiccCard S"
        "log.tag.UiccController S"
        "log.tag.UsbHostManager S"
        "log.tag.UsbManager S"
        "log.tag.UxUtility S"
        "log.tag.VT S"
        "log.tag.VibratorService S"
        "log.tag.VpnManager S"
        "log.tag.VsimAdaptor S"
        "log.tag.WORLDMODE S"
        "log.tag.WallpaperManager S"
        "log.tag.WfoApp S"
        "log.tag.WifiManager S"
        "log.tag.WindowManager S"
        "log.tag.WindowManagerService S"
        "log.tag.WpfaCcciDataHeaderEncoder S"
        "log.tag.WpfaCcciReader S"
        "log.tag.WpfaCcciSender S"
        "log.tag.WpfaControlMsgHandler S"
        "log.tag.WpfaDriver S"
        "log.tag.WpfaDriverAccept S"
        "log.tag.WpfaDriverAdapter S"
        "log.tag.WpfaDriverDeReg S"
        "log.tag.WpfaDriverMessage S"
        "log.tag.WpfaDriverRegFilter S"
        "log.tag.WpfaDriverULIpPkt S"
        "log.tag.WpfaDriverUtilis S"
        "log.tag.WpfaDriverVersion S"
        "log.tag.WpfaFilterRuleReqHandler S"
        "log.tag.WpfaParsing S"
        "log.tag.WpfaRingBuffer S"
        "log.tag.WpfaRuleContainer S"
        "log.tag.WpfaRuleRegister S"
        "log.tag.WpfaShmAccessController S"
        "log.tag.WpfaShmReadMsgHandler S"
        "log.tag.WpfaShmSynchronizer S"
        "log.tag.WpfaShmWriteMsgHandler S"
        "log.tag.brevent.event S"
        "log.tag.libPowerHal S"
        "log.tag.libfuse S"
        "log.tag.mipc_lib S"
        "log.tag.mtkpower@impl S"
        "log.tag.mtkpower_client S"
        "log.tag.trm_lib S"
        "log.tag.wpfa_iptable_android S"
        "log.tag.Networklogger S"
        "log.tag.AudioFlinger::DeviceEffectProxy S"
    )
    for commands in "${disable_log[@]}"; do
    IFS=' ' read -r name value <<< "$commands"
    setprop "$name" "$value"
done
}> /dev/null 2>&1

apply_ram_plus() {
if [ "$(echo "$gb_ram <= 4" | bc)" -eq 1 ]; then
settings put global ram_expand_size 4096
elif [ "$(echo "$gb_ram >= 7" | bc)" -eq 1 ]; then
settings put global ram_expand_size 0
else
    echo ""
fi
}> /dev/null 2>&1

sensi() {
    system=(
        "speed_pointer 7"
        "game-touchscreen-boost 1"
        "touch.pressure.scale 0.001"
        "touch_boost 1"
        "ram_boost 1"
        "cpu_boost 1"
        "gpu_boost 1"
        "ui.hw 1"
    )
    secure=(
        "long_press_timeout 500"
        "multi_press_timeout 500"
        "speed_mode 1"
        "speed_mode_enable 1"
    ) 
    for commands in "${system[@]}"; do
    IFS=' ' read -r name value <<< "$commands"
    settings put system "$name" "$value"
done
    for commands in "${secure[@]}"; do
    IFS=' ' read -r name value <<< "$commands"
    settings put secure "$name" "$value"
done

settings delete global updatable_driver_production_opt_in_apps
settings delete global game_driver_opt_in_apps
settings delete global updatable_driver_production_opt_out_apps
settings delete global updatable_driver_prerelease_opt_in_apps
settings delete global updatable_driver_all_apps
settings delete global updatable_driver_production_in_out_apps
}> /dev/null 2>&1

tweaks() {
    setprop=(
        "debug.sf.hw 1"
        "debug.als.logs 0"
        "debug.atrace.tags.enableflags 0"
        "debug.egl.profiler 0"
        "debug.enable.wl_log 0"
        "debug.sf.enable_hwc_vds 0"
        "debug.sf.ddms 0"
        "ro.kernel.android.checkjni 0"
        "debug.crash.logcat 0"
        "debug.renderengine.graphite true"
        "debug.sf.dump 0"
        "debug.fps.boost.enable true"
        "debug.hwui.skia_atrace_enabled 0"
        "debug.app.performance_restricted false"
        "debug.hwui_force_gpu_rendering 1"
        "debug.sf.multithreaded_present true"
        "debug.gpu.use_low_latency_mode true"
        "debug.gpu.memory_tracking false"
        "debug.mdpcomp.logs 0"
        "debug.egl.force_msaa 0"
        "debug.hwui.force_fxaa 0" 
        "debug.hwui.force_smaa 0" 
        "debug.hwui.force_msaa 0" 
        "debug.hwui.force_txaa 0" 
        "debug.hwui.force_csaa 0" 
        "debug.hwui.force_dlss 0" 
        "debug.gr.swapinterval 1"
        "debug.graphics.game_default_frame_rate.disabled true"
        "debug.sf.swapinterval 1"
        "debug.hwc.otf 0"
        "ro.config.nocheckin 1"
        "debug.hwc_dump_en 0"
        "debug.hwui.disable_vsync 0"
        "debug.egl.hw 1" 
        "debug.mdlogger.Running 0"
        "debug.egl.force_dmsaa 0"
        "debug.sf.showupdates 0"
        "debug.sf.showfps 0"
        "debug.sf.showcpu 0"
        "debug.hwui.overdraw false"
        "debug.sf.enable_adpf_cpu_hint true"        
        "debug.overlayui.enable 0"
        "debug.hwui.use_hint_manager 1"
        "debug.sf.showbackground 0"
        "debug.sf.shoupdates 0"
        "debug.composition.type gpu"
        "debug.egl.swapinterval 1"
        "debug.gpu.renderer skiagl"
        "debug.hwui.renderer skiagl"
        "debug.hwui.use_threaded_renderer true"
        "debug.hwc.logvsync 0"
        "debug.sf.gpuoverlay 0"
        "debug.sf.sa_enable 1"
        "debug.qc.hardware 1"
        "debug.sqlite.journalmode WAL"
        "debug.sf.sa_log 1"
        "debug.hwc.asyncdisp 1"
        "debug.power.loghint 0"
        "debug.force-opengl 1"
        "debug.hwui.fps_divisor 1"
        "debugtool.anrhistory 0"
        "debug.hwc.force_gpu_vsync 1"
        "debug.sf.gpu_comp_tiling 1"
        "windowsmgr.max_events_per_sec 90"
        "ro.min_pointer_dur 8"
        "profiler.hung.dumpdobugreport 0"
        "debug.javafx.animation.fullspeed true"
        "debug.systemuicompilerfilter speed-profile"
        "debug.performance.tuning 1"
        "debug.perf.tuning 1"
        "debug.enable-vr-mode 1"
        "debug.performance.profile 1"
        "debug.perf.profile 1"
        "debug.hwui.use_layer_renderer true"
        "pm.dexopt.bg-dexopt speed-profile"
        "pm.dexopt.ab-ota speed-profile"
        "debug.qualcomm.sns.daemon 0"
        "debug.qualcomm.sns.hal 0"
        "debug.qualcomm.sns.libsensor1 0"
        "debug.sqlite.syncmode 1"
    )
    cache=(
        "debug.hwui.texture_max_size 65536"
        "debug.hwui.texture_cache_size 65536"
        "debug.hwui.layer_cache_size 65536"
        "debug.hwui.path_cache_size 65536"
        "debug.hwui.gradient_cache_size 65536"
        "debug.hwui.drop_shadow_cache_size 65536"
        "debug.hwui.cache_size 65536"
        "debug.hwui.gradient_cache_size 65536"
        "debug.hwui.render_pipeline_cache_size 65536"
        "debug.hwui.cache_size 65536"
        "debug.hwui.resource_cache_size 65536"
        "debug.hwui.fbo_cache_size 65536"
        "debug.hwui.pipeline_cache_size 65536"
        "debug.hwui.buffer_cache_size 65536"
        "debug.hwui.layer_pool_size 65536"
        "debug.hwui.r_buffer_cache_size 65536"
        "debug.hwui.shadow.renderer monolithic"
        "debug.hwui.shape_cache_size 65536"
        "debug.hwui.disable_scissor_opt true"        
    )
    disable_animation=(
        "window_animation_scale 0"
        "transition_animation_scale 0"
        "animator_duration_scale 0"
    )
    global=(
        "gpu_debug_layers 0"
        "gpu_debug_app com.dts.freefiremax,com.dts.freefireth"
        "enable_gpu_debug_layers 0"
        "game_mode_enable 1"
        "perf_mode 1"
        "force_gpu_rendering 1"
        "angle_gl_driver_selection_pkgs com.dts.freefiremax,com.dts.freefireth"
        "angle_gl_driver_selection_values angle,angle"
        "angle_debug_package com.dts.freefiremax,com.dts.freefireth" 
        "GPUTUNER_SWITCH true"
        "CPUTUNER_SWITCH true"
        "debug_app 0"
    )
    optimal=(
        "dalvik.vm.dexopt-flags m=y,v=n,o=v,u=n"
        "dalvik.vm.checkjni 0"
        "dalvik.vm.dex2oat-minidebuginfo false"
        "dalvik.vm.minidebuginfo false"
    )
    for commands in "${cache[@]}"; do
    IFS=' ' read -r name value <<< "$commands"
    setprop "$name" "$value"
done
    for commands in "${global[@]}"; do
    IFS=' ' read -r name value <<< "$commands"
    settings put global "$name" "$value"
done
    for commands in "${setprop@]}"; do
    IFS=' ' read -r name value <<< "$commands"
    setprop "$name" "$value"
done
    for commands in "${disable_animation[@]}"; do
    IFS=' ' read -r name value <<< "$commands"
    settings put global "$name" "$value"
done
    
if [ -n "$(getprop ro.hardware.vulkan)" ]; then
    renderer="skiavk" 
    setprop ro.hardware.vulkan adreno
elif [ -n "$(getprop ro.hardware.opengl)" ]; then
    renderer="skiagl"
else
    renderer="skiagl"
fi

if [ "$brand" != "Xiaomi" ] && ( [ "$brand" = "Samsung" ] || [ "$brand" = "vivo" ] || [ "$brand" = "OPPO" ] ); then
    setprop debug.sf.enable_advanced_sf_phase_offset 0
    settings put global device_idle_constants inactive_to=25000,sensing_to=0,locating_to=0,location_accuracy=20.0,motion_inactive_to=0,idle_after_inactive_to=0,idle_pending_to=60000,max_idle_pending_to=120000,idle_pending_factor=2.0,idle_to=900000,max_idle_to=21600000,idle_factor=2.0,min_time_to_alarm=600000,max_temp_app_whitelist_duration=10000,mms_temp_app_whitelist_duration=10000,sms_temp_app_whitelist_duration=10000,light_after_inactive_to=5000,light_pre_idle_to=60000,light_idle_to=180000,light_idle_factor=2.0,light_max_idle_to=240000,light_idle_maintenance_min_budget=60000,light_idle_maintenance_max_budget=180000,min_light_maintenance_time=5000,min_deep_maintenance_time=30000,notification_whitelist_duration=30000
fi

device_config put game_overlay com.dts.freefireth mode=2,"$renderer"=true,fps="$refresh_rate",downscaleFactor=0.3,vsync=false
device_config put game_overlay com.dts.freefiremax mode=2,"$renderer"=true,fps="$refresh_rate",downscaleFactor=0.3,vsync=false,
setprop debug.hwui.renderer "$renderer"
setprop debug.renderengine.backend skiagputhreaded 
setprop debug.composition.7x27A.type gpu
setprop debug.composition.7x25A.type gpu
settings put global render_quality low
settings put global shadow_quality disable
settings put global texture_quality low
settings put global effects_quality low
settings put global graphics_quality low
settings put global lights_quality low
settings put global shader_quality low
cmd package compile -m speed-profile -f com.android.systemui
cmd package compile -m speed-profile -f com.dts.freefiremax
cmd package compile -m speed-profile -f com.dts.freefireth
cmd game mode performace com.dts.freefireth
cmd game mode performace com.dts.freefiremax
#disable gos, game booster and joyose
pm disable-user --user 0 com.xiaomi.joyose
pm disable-user --user 0 com.samsung.android.game.gos
pm disable-user --user 0 com.samsung.android.game.gametools
pm disable-user --user 0 com.samsung.android.game.gamehome
#speed
pm trim-caches 9999GB
am kill-all
am compact system
#disable logcat buffer
logcat -c
logcat -G 0K
logger_buffer_size 0
settings out global logcat_buffer_size 0
settings out global buffer_size 0
#clean file
rm -rf /sdcard/DCIM/.thumbnails
rm -rf /sdcard/Pictures/.thumbnails
rm -rf /sdcard/Music/.thumbnails
rm -rf /sdcard/Movies/.thumbnails
rm -rf /sdcard/mtklog
rm -rf /sdcard/MIUI/Gallery
rm -rf /sdcard/MIUI/.debug_log
rm -rf /sdcard/MIUI/BugReportCache
rm -rf /sdcard/Android/data/.nomedia
rm -rf /sdcard/Android/obb/.nomedia
rm -rf /sdcard/Android/.Trash/com.sec.android.gallery3d
rm -rf /data/log_other_mode/*
rm -rf /dev/log/*
rm -rf /data/log_other_mode/*
rm -rf /data/log/*
rm -rf /sys/kernel/debug/*
rm -rf /dev/log/main/*
rm -rf /data/dalvik-cache/*
rm -rf /data/local/traces/*
#reup
setprop log.tag.AF::MmapTrack S
setprop log.tag.AF::OutputTrack S
setprop log.tag.AF::PatchRecord S
setprop log.tag.AF::PatchTrack S
setprop log.tag.AF::RecordHandle S
setprop log.tag.AF::RecordTrack S
setprop log.tag.AF::Track S
setprop log.tag.AF::TrackBase S
setprop log.tag.AF::TrackHandle S
setprop log.tag.APM-KpiMonitor S
setprop log.tag.APM-ServiceJ S
setprop log.tag.APM-SessionJ S
setprop log.tag.APM-SessionN S
setprop log.tag.APM-Subscriber S
setprop log.tag.APM::AudioCollections S
setprop log.tag.APM::AudioInputDescriptor S
setprop log.tag.APM::AudioOutputDescriptor S
setprop log.tag.APM::AudioPatch S
setprop log.tag.APM::AudioPolicyEngine S
setprop log.tag.APM::AudioPolicyEngine::Base S
setprop log.tag.APM::AudioPolicyEngine::Config S
setprop log.tag.APM::AudioPolicyEngine::ProductStrategy S
setprop log.tag.APM::AudioPolicyEngine::VolumeGroup S
setprop log.tag.APM::Devices S
setprop log.tag.APM::IOProfile S
setprop log.tag.APM::Serializer S
setprop log.tag.APM::VolumeCurve S
setprop log.tag.APM_AudioPolicyManager S
setprop log.tag.APM_ClientDescriptor S
setprop log.tag.AT S
setprop log.tag.AccountManager S
setprop log.tag.ActivityManager S
setprop log.tag.ActivityManagerService S
setprop log.tag.ActivityTaskManager S
setprop log.tag.ActivityTaskManagerService S
setprop log.tag.AdnRecord S
setprop log.tag.AdnRecordCache S
setprop log.tag.AdnRecordLoader S
setprop log.tag.AirplaneHandler S
setprop log.tag.AlarmManager S
setprop log.tag.AlarmManagerService S
setprop log.tag.AndroidRuntime S
setprop log.tag.AppOps S
setprop log.tag.AudioAttributes S
setprop log.tag.AudioEffect S
setprop log.tag.AudioFlinger S
setprop log.tag.AudioFlinger::DeviceEffectProxy S
setprop log.tag.AudioFlinger::DeviceEffectProxy::ProxyCallback S
setprop log.tag.AudioFlinger::EffectBase S
setprop log.tag.AudioFlinger::EffectChain S
setprop log.tag.AudioFlinger::EffectHandle S
setprop log.tag.AudioFlinger::EffectModule S
setprop log.tag.AudioFlinger_Threads S
setprop log.tag.AudioHwDevice S
setprop log.tag.AudioManager S
setprop log.tag.AudioPolicy S
setprop log.tag.AudioPolicyEffects S
setprop log.tag.AudioPolicyIntefaceImpl S
setprop log.tag.AudioPolicyManager S
setprop log.tag.AudioPolicyService S
setprop log.tag.AudioProductStrategy S
setprop log.tag.AudioRecord S
setprop log.tag.AudioService S
setprop log.tag.AudioSystem S
setprop log.tag.AudioTrack S
setprop log.tag.AudioTrackShared S
setprop log.tag.AudioVolumeGroup S
setprop log.tag.BackupManager S
setprop log.tag.BatteryManager S
setprop log.tag.BatteryStatsService S
setprop log.tag.BluetoothAdapter S
setprop log.tag.BluetoothDevice S
setprop log.tag.BluetoothGattService S
setprop log.tag.BluetoothHidService S
setprop log.tag.BluetoothManager S
setprop log.tag.BluetoothMapService S
setprop log.tag.BluetoothPanService S
setprop log.tag.BluetoothPbapService S
setprop log.tag.BluetoothSapService S
setprop log.tag.BluetoothService S
setprop log.tag.BluetoothSocket S
setprop log.tag.BufferQueueDump S
setprop log.tag.BufferQueueProducer S
setprop log.tag.C2K_AT S
setprop log.tag.C2K_ATConfig S
setprop log.tag.C2K_RILC S
setprop log.tag.CAM2PORT_ S
setprop log.tag.CapaSwitch S
setprop log.tag.CarrierExpressServiceImpl S
setprop log.tag.CarrierExpressServiceImplExt S
setprop log.tag.ClipboardManager S
setprop log.tag.ConnectivityManager S
setprop log.tag.ConnectivityService S
setprop log.tag.ConsumerIrService S
setprop log.tag.ContentManager S
setprop log.tag.CountryDetector S
setprop log.tag.DMC-ApmService S
setprop log.tag.DMC-Core S
setprop log.tag.DMC-DmcService S
setprop log.tag.DMC-EventsSubscriber S
setprop log.tag.DMC-ReqQManager S
setprop log.tag.DMC-SessionManager S
setprop log.tag.DMC-TranslatorLoader S
setprop log.tag.DMC-TranslatorUtils S
setprop log.tag.DSSelector S
setprop log.tag.DSSelectorOP01 S
setprop log.tag.DSSelectorOP02 S
setprop log.tag.DSSelectorOP09 S
setprop log.tag.DSSelectorOP18 S
setprop log.tag.DSSelectorOm S
setprop log.tag.DSSelectorUtil S
setprop log.tag.DataDispatcher S
setprop log.tag.DeviceIdleController S
setprop log.tag.DevicePolicyManager S
setprop log.tag.DevicePolicyManagerService S
setprop log.tag.DisplayManager S
setprop log.tag.DisplayManagerService S
setprop log.tag.DockObserver S
setprop log.tag.DownloadManager S
setprop log.tag.ExternalSimMgr S
setprop log.tag.FastCapture S
setprop log.tag.FastMixer S
setprop log.tag.FastMixerState S
setprop log.tag.FastThread S
setprop log.tag.FragmentManager S
setprop log.tag.FuseDaemon S
setprop log.tag.GAv4 S
setprop log.tag.GraphicsStats S
setprop log.tag.GsmCallTkrHlpr S
setprop log.tag.GsmCdmaConn S
setprop log.tag.GsmCdmaPhone S
setprop log.tag.HardwarePropertiesManager S
setprop log.tag.HardwareService S
setprop log.tag.IAudioFlinger S
setprop log.tag.IMSRILRequest S
setprop log.tag.IMS_RILA S
setprop log.tag.IccCardProxy S
setprop log.tag.IccPhoneBookIM S
setprop log.tag.IccProvider S
setprop log.tag.ImsApp S
setprop log.tag.ImsBaseCommands S
setprop log.tag.ImsCall S
setprop log.tag.ImsCallProfile S
setprop log.tag.ImsCallSession S
setprop log.tag.ImsEcbm S
setprop log.tag.ImsEcbmProxy S
setprop log.tag.ImsManager S
setprop log.tag.ImsPhone S
setprop log.tag.ImsPhoneBase S
setprop log.tag.ImsPhoneCall S
setprop log.tag.ImsService S
setprop log.tag.ImsVTProvider S
setprop log.tag.InputDispatcher S
setprop log.tag.InputManager S
setprop log.tag.InputManagerService S
setprop log.tag.InputMethodManager S
setprop log.tag.InputMethodManagerService S
setprop log.tag.InterfaceManager S
setprop log.tag.IsimFileHandler S
setprop log.tag.IsimRecords S
setprop log.tag.JobScheduler S
setprop log.tag.KeyguardManager S
setprop log.tag.LCM-Subscriber S
setprop log.tag.LIBC2K_RIL S
setprop log.tag.LocationManager S
setprop log.tag.LocationManagerService S
setprop log.tag.LocationProvider S
setprop log.tag.MAPI-CommandProcessor S
setprop log.tag.MAPI-MdiRedirector S
setprop log.tag.MAPI-MdiRedirectorCtrl S
setprop log.tag.MAPI-NetworkSocketConnection S
setprop log.tag.MAPI-SocketConnection S
setprop log.tag.MAPI-SocketListener S
setprop log.tag.MAPI-TranslatorManager S
setprop log.tag.MDM-Subscriber S
setprop log.tag.MTKSST S
setprop log.tag.MTK_APPList S
setprop log.tag.MediaPlayer S
setprop log.tag.MediaPlayerService S
setprop log.tag.MediaRouter S
setprop log.tag.MediaSession S
setprop log.tag.MipcEventHandler S
setprop log.tag.MountService S
setprop log.tag.MtkAdnRecord S
setprop log.tag.MtkCsimFH S
setprop log.tag.MtkEmbmsAdaptor S
setprop log.tag.MtkFactory S
setprop log.tag.MtkGsmCdmaConn S
setprop log.tag.MtkIccCardProxy S
setprop log.tag.MtkIccPHBIM S
setprop log.tag.MtkIccProvider S
setprop log.tag.MtkIccSmsInterfaceManager S
setprop log.tag.MtkImsManager S
setprop log.tag.MtkImsService S
setprop log.tag.MtkIsimFH S
setprop log.tag.MtkPhoneNotifr S
setprop log.tag.MtkPhoneNumberUtils S
setprop log.tag.MtkPhoneSwitcher S
setprop log.tag.MtkRecordLoader S
setprop log.tag.MtkRuimFH S
setprop log.tag.MtkSIMFH S
setprop log.tag.MtkSIMRecords S
setprop log.tag.MtkSmsCbHeader S
setprop log.tag.MtkSmsManager S
setprop log.tag.MtkSmsMessage S
setprop log.tag.MtkSpnOverride S
setprop log.tag.MtkSubCtrl S
setprop log.tag.MtkTelephonyManagerEx S
setprop log.tag.MtkUiccCard S
setprop log.tag.MtkUiccCardApp S
setprop log.tag.MtkUiccCtrl S
setprop log.tag.MtkUsimFH S
setprop log.tag.MtkUsimPhoneBookManager S
setprop log.tag.MwiRIL S
setprop log.tag.NetAgentService S
setprop log.tag.NetAgent_IO S
setprop log.tag.NetLnkEventHdlr S
setprop log.tag.NetworkManagement S
setprop log.tag.NetworkManagementService S
setprop log.tag.NetworkPolicy S
setprop log.tag.NetworkPolicyManagerService S
setprop log.tag.NetworkStats S
setprop log.tag.NetworkTimeUpdateService S
setprop log.tag.NotificationManager S
setprop log.tag.NotificationManagerService S
setprop log.tag.OperatorUtils S
setprop log.tag.PKM-Lib S
setprop log.tag.PKM-MDM S
setprop log.tag.PKM-Monitor S
setprop log.tag.PKM-SA S
setprop log.tag.PKM-Service S
setprop log.tag.PQ_DS S
setprop log.tag.PackageInstaller S
setprop log.tag.PackageManager S
setprop log.tag.PersistentDataBlockManager S
setprop log.tag.Phone S
setprop log.tag.PhoneConfigurationSettings S
setprop log.tag.PhoneFactory S
setprop log.tag.PowerHalAddressUitls S
setprop log.tag.PowerHalMgrImpl S
setprop log.tag.PowerHalMgrServiceImpl S
setprop log.tag.PowerHalWifiMonitor S
setprop log.tag.PowerManager S
setprop log.tag.PowerManagerService S
setprop log.tag.PrintManager S
setprop log.tag.ProcessStats S
setprop log.tag.ProxyController S
setprop log.tag.RFX S
setprop log.tag.RIL S
setprop log.tag.RIL-Fusion S
setprop log.tag.RIL-Netlink S
setprop log.tag.RIL-Parcel S
setprop log.tag.RIL-SocListen S
setprop log.tag.RIL-Socket S
setprop log.tag.RILC S
setprop log.tag.RILC-OP S
setprop log.tag.RILD S
setprop log.tag.RILMD2-SS S
setprop log.tag.RIL_UIM_SOCKET S
setprop log.tag.RadioManager S
setprop log.tag.RfxAction S
setprop log.tag.RfxBaseHandler S
setprop log.tag.RfxChannelMgr S
setprop log.tag.RfxCloneMgr S
setprop log.tag.RfxContFactory S
setprop log.tag.RfxController S
setprop log.tag.RfxDebugInfo S
setprop log.tag.RfxDisThread S
setprop log.tag.RfxFragEnc S
setprop log.tag.RfxHandlerMgr S
setprop log.tag.RfxIdToMsgId S
setprop log.tag.RfxIdToStr S
setprop log.tag.RfxMainThread S
setprop log.tag.RfxMclDisThread S
setprop log.tag.RfxMclMessenger S
setprop log.tag.RfxMclStatusMgr S
setprop log.tag.RfxMessage S
setprop log.tag.RfxObject S
setprop log.tag.RfxOpUtils S
setprop log.tag.RfxRilAdapter S
setprop log.tag.RfxRilUtils S
setprop log.tag.RfxRoot S
setprop log.tag.RfxStatusMgr S
setprop log.tag.RfxTimer S
setprop log.tag.RilClient S
setprop log.tag.RilOemClient S
setprop log.tag.RilOpProxy S
setprop log.tag.RmmCapa S
setprop log.tag.RmmCommSimOpReq S
setprop log.tag.RmmDcEvent S
setprop log.tag.RmmDcPdnManager S
setprop log.tag.RmmDcUrcHandler S
setprop log.tag.RmmDcUtility S
setprop log.tag.RmmEccNumberReqHdlr S
setprop log.tag.RmmEccNumberUrcHandler S
setprop log.tag.RmmEmbmsReq S
setprop log.tag.RmmEmbmsUrc S
setprop log.tag.RmmImsCtlReqHdl S
setprop log.tag.RmmImsCtlUrcHdl S
setprop log.tag.RmmMwi S
setprop log.tag.RmmNwAsyncHdlr S
setprop log.tag.RmmNwHdlr S
setprop log.tag.RmmNwNrtReqHdlr S
setprop log.tag.RmmNwRTReqHdlr S
setprop log.tag.RmmNwRatSwHdlr S
setprop log.tag.RmmNwReqHdlr S
setprop log.tag.RmmNwUrcHdlr S
setprop log.tag.RmmOemHandler S
setprop log.tag.RmmOpRadioReq S
setprop log.tag.RmmPhbReq S
setprop log.tag.RmmPhbUrc S
setprop log.tag.RmmRadioReq S
setprop log.tag.RmmSimBaseHandler S
setprop log.tag.RmmSimCommReq S
setprop log.tag.RmmSimCommUrc S
setprop log.tag.RmmWp S
setprop log.tag.RtmCapa S
setprop log.tag.RtmCommSimCtrl S
setprop log.tag.RtmDC S
setprop log.tag.RtmEccNumberController S
setprop log.tag.RtmEmbmsAt S
setprop log.tag.RtmEmbmsUtil S
setprop log.tag.RtmIms S
setprop log.tag.RtmImsConference S
setprop log.tag.RtmImsConfigController S
setprop log.tag.RtmImsDialog S
setprop log.tag.RtmModeCont S
setprop log.tag.RtmMwi S
setprop log.tag.RtmNwCtrl S
setprop log.tag.RtmPhb S
setprop log.tag.RtmRadioConfig S
setprop log.tag.RtmRadioCont S
setprop log.tag.RtmWp S
setprop log.tag.SIMRecords S
setprop log.tag.SQLiteQueryBuilder S
setprop log.tag.SensorManager S
setprop log.tag.ServiceManager S
setprop log.tag.SimSwitchOP01 S
setprop log.tag.SimSwitchOP02 S
setprop log.tag.SimSwitchOP18 S
setprop log.tag.SlotQueueEntry S
setprop log.tag.SpnOverride S
setprop log.tag.StatusBarManagerService S
setprop log.tag.StorageManager S
setprop log.tag.SurfaceFlinger S
setprop log.tag.SystemServer S
setprop log.tag.Telecom S
setprop log.tag.TelephonyManager S
setprop log.tag.TelephonyRegistry S
setprop log.tag.ThermalManager S
setprop log.tag.ToneGenerator S
setprop log.tag.UiccCard S
setprop log.tag.UiccController S
setprop log.tag.UsbHostManager S
setprop log.tag.UsbManager S
setprop log.tag.UxUtility S
setprop log.tag.VT S
setprop log.tag.VibratorService S
setprop log.tag.VpnManager S
setprop log.tag.VsimAdaptor S
setprop log.tag.WORLDMODE S
setprop log.tag.WallpaperManager S
setprop log.tag.WfoApp S
setprop log.tag.WifiManager S
setprop log.tag.WindowManager S
setprop log.tag.WindowManagerService S
setprop log.tag.WpfaCcciDataHeaderEncoder S
setprop log.tag.WpfaCcciReader S
setprop log.tag.WpfaCcciSender S
setprop log.tag.WpfaControlMsgHandler S
setprop log.tag.WpfaDriver S
setprop log.tag.WpfaDriverAccept S
setprop log.tag.WpfaDriverAdapter S
setprop log.tag.WpfaDriverDeReg S
setprop log.tag.WpfaDriverMessage S
setprop log.tag.WpfaDriverRegFilter S
setprop log.tag.WpfaDriverULIpPkt S
setprop log.tag.WpfaDriverUtilis S
setprop log.tag.WpfaDriverVersion S
setprop log.tag.WpfaFilterRuleReqHandler S
setprop log.tag.WpfaParsing S
setprop log.tag.WpfaRingBuffer S
setprop log.tag.WpfaRuleContainer S
setprop log.tag.WpfaRuleRegister S
setprop log.tag.WpfaShmAccessController S
setprop log.tag.WpfaShmReadMsgHandler S
setprop log.tag.WpfaShmSynchronizer S
setprop log.tag.WpfaShmWriteMsgHandler S
setprop log.tag.brevent.event S
setprop log.tag.libPowerHal S
setprop log.tag.libfuse S
setprop log.tag.mipc_lib S
setprop log.tag.mtkpower@impl S
setprop log.tag.mtkpower_client S
setprop log.tag.trm_lib S
setprop log.tag.wpfa_iptable_android S
setprop log.tag.Networklogger S
setprop log.tag.AudioFlinger::DeviceEffectProxy S
settings put system ro.min.fling_velocity 25000
settings put system ro.max.fling_velocity 25000
settings put system speed_pointer 7
settings put system game-touchscreen-boost 1
settings put system touch.pressure.scale 0.001
settings put system touch_boost 1
settings put system ram_boost 1
settings put system cpu_boost 1
settings put system gpu_boost 1
settings put system zram_enable 1
settings put system ui.hw 1
settings put secure long_press_timeout 500
settings put secure multi_press_timeout 500
settings put secure speed_mode 1
settings put secure speed_mode_enable 1
setprop debug.sf.hw 1
setprop debug.als.logs 0
setprop debug.atrace.tags.enableflags 0
setprop debug.egl.profiler 0
setprop debug.enable.wl_log 0
setprop debug.sf.enable_hwc_vds 0
setprop debug.sf.ddms 0
setprop debug.crash.logcat 0
setprop debug.renderengine.graphite true
setprop debug.sf.dump 0
setprop debug.fps.boost.enable true
setprop debug.hwui.skia_atrace_enabled 0
setprop debug.app.performance_restricted false
setprop debug.hwui_force_gpu_rendering 1
setprop debug.sf.multithreaded_present true
setprop debug.gpu.use_low_latency_mode true
setprop debug.gpu.memory_tracking false
setprop debug.mdpcomp.logs 0
setprop debug.egl.force_msaa 0
setprop debug.hwui.force_fxaa 0 
setprop debug.hwui.force_smaa 0 
setprop debug.hwui.force_msaa 0 
setprop debug.hwui.force_txaa 0 
setprop debug.hwui.force_csaa 0 
setprop debug.hwui.force_dlss 0 
setprop debug.gr.swapinterval 1
setprop debug.graphics.game_default_frame_rate.disabled true
setprop debug.sf.swapinterval 1
setprop debug.hwc.otf 0
setprop debug.hwc_dump_en 0
setprop debug.hwui.disable_vsync 0
setprop debug.egl.hw 1 
setprop debug.mdlogger.Running 0
setprop debug.egl.force_dmsaa 0
setprop debug.sf.showupdates 0
setprop debug.sf.showfps 0
setprop debug.sf.showcpu 0
setprop debug.hwui.overdraw false
setprop debug.sf.enable_adpf_cpu_hint true        
setprop debug.overlayui.enable 0
setprop debug.hwui.use_hint_manager 1
setprop debug.sf.showbackground 0
setprop debug.sf.shoupdates 0
setprop debug.composition.type gpu
setprop debug.egl.swapinterval 1
setprop debug.gpu.renderer skiagl
setprop debug.hwui.renderer skiagl
setprop debug.hwui.use_threaded_renderer true
setprop debug.hwc.logvsync 0
setprop debug.sf.gpuoverlay 0
setprop debug.sf.sa_enable 1
setprop debug.qc.hardware 1
setprop debug.sqlite.journalmode WAL
setprop debug.sf.sa_log 1
setprop debug.hwc.asyncdisp 1
setprop debug.power.loghint 0
setprop debug.force-opengl 1
setprop debug.hwui.fps_divisor 1
setprop debugtool.anrhistory 0
setprop debug.hwc.force_gpu_vsync 1
setprop debug.sf.gpu_comp_tiling 1
setprop debug.javafx.animation.fullspeed true
setprop debug.systemuicompilerfilter speed-profile
setprop debug.performance.tuning 1
setprop debug.perf.tuning 1
setprop debug.enable-vr-mode 1
setprop debug.performance.profile 1
setprop debug.perf.profile 1
setprop debug.hwui.use_layer_renderer true
setprop pm.dexopt.bg-dexopt speed-profile
setprop pm.dexopt.ab-ota speed-profile
setprop debug.qualcomm.sns.daemon 0
setprop debug.qualcomm.sns.hal 0
setprop debug.qualcomm.sns.libsensor1 0
setprop debug.sqlite.syncmode 1
setprop debug.hwui.texture_max_size 65536
setprop debug.hwui.texture_cache_size 65536
setprop debug.hwui.layer_cache_size 65536
setprop debug.hwui.path_cache_size 65536
setprop debug.hwui.gradient_cache_size 65536
setprop debug.hwui.drop_shadow_cache_size 65536
setprop debug.hwui.cache_size 65536
setprop debug.hwui.gradient_cache_size 65536
setprop debug.hwui.render_pipeline_cache_size 65536
setprop debug.hwui.cache_size 65536
setprop debug.hwui.resource_cache_size 65536
setprop debug.hwui.fbo_cache_size 65536
setprop debug.hwui.pipeline_cache_size 65536
setprop debug.hwui.buffer_cache_size 65536
setprop debug.hwui.layer_pool_size 65536
setprop debug.hwui.r_buffer_cache_size 65536
setprop debug.hwui.shadow.renderer monolithic
setprop debug.hwui.shape_cache_size 65536
setprop debug.hwui.disable_scissor_opt true        
setprop debug.sf.early_app_phase_offset_ns 1000000
setprop debug.sf.early_gl_app_phase_offset_ns 1000000
setprop debug.sf.early_gl_phase_offset_ns 1000000
setprop debug.sf.early_phase_offset_ns 1000000
setprop debug.sf.high_fps_early_gl_phase_offset_ns 1000000
setprop debug.sf.high_fps_late_app_phase_offset_ns 1000000
setprop debug.sf.high_fps_late_sf_phase_offset_ns 1000000
setprop debug.sf.early.app.duration 13666666
setprop debug.sf.early.sf.duration 10500000
setprop debug.sf.earlyGl.app.duration 13666666
setprop debug.sf.earlyGl.sf.duration 10500000
setprop debug.sf.late.app.duration 13666666
setprop debug.sf.late.sf.duration 10500000
setprop debug.sf.region_sampling_period_ns 200000000
setprop debug.sf.region_sampling_timer_timeout_ns 200000000
settings put global window_animation_scale 0
settings put global transition_animation_scale 0
settings put global animator_duration_scale 0
settings put global gpu_debug_layers 0
settings put global enable_gpu_debug_layers 0
settings put global game_mode_enable 1
settings put global perf_mode 1
settings put global angle_gl_driver_selection_pkgs com.dts.freefiremax,com.dts.freefireth
settings put global angle_gl_driver_selection_values angle,angle
settings put global GPUTUNER_SWITCH true
settings put global CPUTUNER_SWITCH true
setprop debug_app 0
setprop dalvik.vm.dexopt-flags m=y,v=n,o=v,u=n
setprop dalvik.vm.checkjni 0
setprop dalvik.vm.dex2oat-minidebuginfo false
setprop dalvik.vm.minidebuginfo false
}> /dev/null 2>&1

echo "[INFO] $(date '+%H:%M:%S'): Sensitivity VIP"
sleep 1
echo "[INFO] $(date '+%H:%M:%S'): Fix Delay VIP "
sleep 1
echo "[INFO] $(date '+%H:%M:%S'): ON Fix Lag "
sleep 1
echo "[INFO] $(date '+%H:%M:%S'): Optimized Touch "
sleep 1
echo "[INFO] $(date '+%H:%M:%S'): Disable LOG "
sleep 1
echo "[INFO] $(date '+%H:%M:%S'): Disable Vsync VIP "
sleep 1
echo "[INFO] $(date '+%H:%M:%S'): OFF Animation "
sleep 1
echo "[INFO] $(date '+%H:%M:%S'): Force Stop Anti-aliasing  "
sleep 1
echo "[INFO] $(date '+%H:%M:%S'): Hight Performance VIP "
sleep 1
echo "[INFO] $(date '+%H:%M:%S'): Boost CPU/GPU VIP  "
sleep 1
echo "[INFO] $(date '+%H:%M:%S'): Smooth VIP "
sleep 1
echo "[INFO] $(date '+%H:%M:%S'): Speed Up System and games "
sleep 1
echo "[INFO] $(date '+%H:%M:%S'): Reduce Resolution VIP "
sleep 1
echo "[INFO] $(date '+%H:%M:%S'): ON Gamming Mode "
sleep 1
echo "[INFO] $(date '+%H:%M:%S'): Clean Files VIP "
sleep 1
echo "[INFO] $(date '+%H:%M:%S'): ON Doze Mode VIP  "
sleep 1
echo "[INFO] $(date '+%H:%M:%S'): High Fps VIP "
sleep 1
echo "[INFO] $(date '+%H:%M:%S'): Increase Fps "
sleep 1
echo "[INFO] $(date '+%H:%M:%S'): Disable Lock FPS"
sleep 1
echo "[INFO] $(date '+%H:%M:%S'): OFF Logcat VIP "
sleep 1
echo "[INFO] $(date '+%H:%M:%S'): ON RENDER if sp "
sleep 1
echo "[INFO] $(date '+%H:%M:%S'): Fix Drop Fps "
sleep 1
echo "[INFO] $(date '+%H:%M:%S'): RAM VIP FOR 2/3/4GB"
sleep 1
echo "[INFO] $(date '+%H:%M:%S'): Opengl Lite "

log
sensi
tweaks
apply_properties
apply_tweaks
apply_fps
apply_vsync1
apply_vsync2
apply_vsync3
apply_ram_plus

echo "[WARNING] $(date '+%H:%M:%S'): All Tweaks Success"
echo "[WARNING] $(date '+%H:%M:%S'): Vui lòng khởi động lại để có tác dụng"
echo "[WARNING] $(date '+%H:%M:%S'): Modules V3 Đã Chạy Thành Công" >> /sdcard/log.txt
cmd notification post -S bigtext -t '[WARNNING]: Vui lòng khởi động lại để có tác dụng ' 'Tag' 'Thanks'
' | base64 -d)"
# Option encode/obfuscate: 2
# https://anotepad.com/notes/eabcnj39
